-- -- task_2.sql

-- -- USE the target database
-- USE alx_book_store;

-- -- CREATE TABLE: authors
-- CREATE TABLE IF NOT EXISTS AUTHORS (
--     AUTHOR_ID INT AUTO_INCREMENT PRIMARY KEY,
--     NAME VARCHAR(100) NOT NULL,
--     BIO TEXT
-- );

-- -- CREATE TABLE: books
-- CREATE TABLE IF NOT EXISTS BOOKS (
--     BOOK_ID INT AUTO_INCREMENT PRIMARY KEY,
--     TITLE VARCHAR(255) NOT NULL,
--     AUTHOR_ID INT NOT NULL,
--     PRICE DECIMAL(10, 2) NOT NULL,
--     STOCK INT DEFAULT 0,
--     FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHORS(AUTHOR_ID)
-- );

-- -- CREATE TABLE: customers
-- CREATE TABLE IF NOT EXISTS CUSTOMERS (
--     CUSTOMER_ID INT AUTO_INCREMENT PRIMARY KEY,
--     NAME VARCHAR(100) NOT NULL,
--     EMAIL VARCHAR(100) UNIQUE NOT NULL,
--     PHONE VARCHAR(15),
--     ADDRESS TEXT
-- );

-- -- CREATE TABLE: orders
-- CREATE TABLE IF NOT EXISTS ORDERS (
--     ORDER_ID INT AUTO_INCREMENT PRIMARY KEY,
--     CUSTOMER_ID INT NOT NULL,
--     ORDER_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
--     FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
-- );

-- -- CREATE TABLE: order_details
-- CREATE TABLE IF NOT EXISTS ORDER_DETAILS (
--     ORDER_DETAIL_ID INT AUTO_INCREMENT PRIMARY KEY,
--     ORDER_ID INT NOT NULL,
--     BOOK_ID INT NOT NULL,
--     QUANTITY INT NOT NULL,
--     FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID),
--     FOREIGN KEY (BOOK_ID) REFERENCES BOOKS(BOOK_ID)
-- );



USE alx_book_store;

CREATE TABLE AUTHORS (
    AUTHOR_ID INT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(100) NOT NULL,
    BIO TEXT
);

CREATE TABLE BOOKS (
    BOOK_ID INT AUTO_INCREMENT PRIMARY KEY,
    TITLE VARCHAR(255) NOT NULL,
    AUTHOR_ID INT,
    GENRE VARCHAR(100),
    PRICE DECIMAL(10, 2),
    STOCK INT,
    FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHORS(AUTHOR_ID)
);

CREATE TABLE CUSTOMERS (
    CUSTOMER_ID INT AUTO_INCREMENT PRIMARY KEY,
    CUSTOMER_NAME VARCHAR(100) NOT NULL,
    EMAIL VARCHAR(100) UNIQUE NOT NULL,
    ADDRESS VARCHAR(255)
);

CREATE TABLE ORDERS (
    ORDER_ID INT AUTO_INCREMENT PRIMARY KEY,
    CUSTOMER_ID INT,
    ORDER_DATE DATE NOT NULL,
    STATUS VARCHAR(50),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
);

CREATE TABLE ORDER_DETAILS (
    ORDER_DETAIL_ID INT AUTO_INCREMENT PRIMARY KEY,
    ORDER_ID INT,
    BOOK_ID INT,
    QUANTITY INT NOT NULL,
    PRICE DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID),
    FOREIGN KEY (BOOK_ID) REFERENCES BOOKS(BOOK_ID)
);

